package DZ.DZ_1;

import java.util.Arrays;

// Задача 2
// Реализуйте метод subArrays, принимающий в качестве аргументов два целочисленных массива a и b, и возвращающий новый массив c, каждый элемент которого равен разности элементов двух входящих массивов в той же ячейке.

// Если длины массивов не равны - верните нулевой массив длины 1.

// Напишите свой код в методе subArrays класса Answer. Метод subArrays принимает на вход два параметра:

// int[] a - первый массив
// int[] b - второй массив

// ****************************************************************************************************************

// Задача 2
// Реализуйте метод divArrays, принимающий в качестве аргументов два целочисленных массива a и b, и возвращающий новый массив с, каждый элемент которого равен частному элементов двух входящих массивов в той же ячейке.

// Если длины массивов не равны - верните нулевой массив длины 1.

// Важно: При выполнении метода единственное исключение, которое пользователь может увидеть - RuntimeException, т.е. ваше.

// Напишите свой код в методе divArrays класса Answer. Метод divArrays принимает на вход два параметра:

// int[] a - первый массив
// int[] b - второй массив

public class Main {
    public static void main(String[] args) {
        int[] a = new int[] { 12, 8, 16 };
        int[] b = new int[] { 4, 2, 4, 5 };

        System.out.println(Arrays.toString(subArrays(a, b)));
    }

    public static int[] subArrays(int[] a, int[] b) {
        if (a.length == b.length) {

            int[] res = new int[a.length];
            for (int i = 0; i < res.length; i++) {
                // res[i] = a[i] - b[i];
                res[i] = a[i] / b[i];
            }
            return res;
        }
        int[] res = { 0 };
        return res;
    }
}
